# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  #startDate: $[format('{0:yyyy}-{0:MM}-{0:dd} {0:HH}:{0:mm}:{0:ss}', pipeline.startTime)]
  startDate: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")
  endDate: $(Get-Date (Get-Date).AddHours(12) -Format "yyyy-MM-dd HH:mm:ss")

stages:
- stage: Build
  jobs:
  - job: Build
    variables:
      - name: twelveHoursFromNow
        value: $(Get-Date (Get-Date).AddHours(12) -Format "yyyy-MM-dd HH:mm:ss")
    steps:
    - bash: |
        echo "##vso[task.setvariable variable=startDate;isOutput=true]$(startDate)"
      name: passStartDate
    - task: NuGetToolInstaller@0


    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: ServiceNow-DevOps-Config-Agent-Upload-Config@1
      name: 'componentUpload'
      inputs:
        connectedServiceName: 'dev72220-Parts Unlimited-ServiceNow DevOps Service Connection'
        applicationName: 'Parts Unlimited'
        uploadTarget: 'component'
        configFile: '**/*.param.json'
        namePath: 'ARM'
        dataFormat: 'json'
        autoValidate: true
        autoCommit: true
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*test*.dll
          !**\obj\**

        searchFolder: '$(System.DefaultWorkingDirectory)'
        vsTestVersion: '16.0'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    

    - task: CopyFiles@2
      displayName: 'Copy Files'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: '**/*.json'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
    - task: ServiceNow-DevOps-Agent-Artifact-Registration@1
      inputs:
        connectedServiceName: 'dev72220-Parts Unlimited-ServiceNow DevOps Service Connection'
        artifactsPayload: |
          {
            "artifacts": [
                {
                  "name": "BuildDrop",
                  "version": "1.$(Build.BuildId)",
                  "semanticVersion": "1.$(Build.BuildId).0",
                  "repositoryName": "PartsUnlimited"
                }
            ]
          }

- stage: Test
  jobs:
  - job: Validate
    variables:
      - name: varChangesetNumber
        value: $[stageDependencies.Build.Build.outputs['componentUpload.changesetNumber'] ]
    steps: 
    - powershell: |
        Write-Host "The date twelve hours from now will be: $(endDate)"  
    - task: ServiceNow-DevOps-Config-Agent-Register-Pipeline@1
      inputs:
        connectedServiceName: 'dev72220-Parts Unlimited-ServiceNow DevOps Service Connection'
        changesetNumber: '$(varChangesetNumber)'
        applicationName: 'Parts Unlimited'
    - task: ServiceNow-DevOps-Config-Agent-Get-Snapshot@1
      name: getSnapshot
      inputs:
        connectedServiceName: 'dev72220-Parts Unlimited-ServiceNow DevOps Service Connection'
        applicationName: 'Parts Unlimited'
        deployableName: 'Production_1'
        changeSetNumber: '$(varChangeSetNumber)'
    - task: ServiceNow-DevOps-Config-Agent-Get-Snapshot-Name@1
      name: getSnapshotName
      inputs:
        deployableName: 'Production_1'
        script: |
          function run(){
          let name;
          let deployableName = process.argv[2]; 
          let jsonObj = $(getSnapshot.snapshotObjects);
          let size = jsonObj.result.length;
          for( let i =0; i<size ;i++ ){
          obj = jsonObj.result[i];
          if(obj["deployable_id.name"].toLowerCase() == deployableName){
          name = obj.name;
          console.log(name);   // This standard output of inline script is given as the task output
          }
          }
          }
          run();

    - task: ServiceNow-DevOps-Config-Agent-Publish-Snapshot@1
      inputs:
        connectedServiceName: 'dev72220-Parts Unlimited-ServiceNow DevOps Service Connection'
        applicationName: 'Parts Unlimited'
        deployableName: 'Production_1'
        snapshotName: '$(getSnapShotName.SnapshotName)'

- stage: Deploy
  jobs:
  - job: Deploy_Application_Precondition
    variables:
    - name: varSnapshotName
      value: $[stageDependencies.Test.Validate.outputs['getSnapShotName.snapshotName'] ]
    - name: changeStartDate
      value: $[stageDependencies.Build.Build.outputs['passStartDate.startDate']]
    pool: server
    steps:  
    - task: ServiceNow-DevOps-Server-Change-Acceleration@1
      name: 'task1'
      inputs:
        connectedServiceName: 'dev72220-Parts Unlimited-ServiceNow DevOps Service Connection'
        applicationName: Parts Unlimited
        snapshotName: $(varSnapshotName)
        changeRequestDetails: |
          {
                                "setCloseCode": false,
                                "attributes": {
                                  "requested_by": {
                                      "name": "System Administrator"
                                  },
                                  "category": "DevOps",
                                  "priority": "2",
                                  "comments": "This is a sample pipeline script to be added in your change step",
                                  "work_notes": "Update this to work_notes",
                                  "start_date": "$(changeStartDate)",
                                  "end_date": "$(endDate)"
                               }
                              }


  - job: Deploy_Application
    dependsOn: Deploy_Application_Precondition
    condition: succeeded()
    steps:
      - script: echo $(task1.CHANGE_REQUEST_NUMBER)